{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Components/Header.js","constants.js","Containers/AppRedux.js","actions.js","reducers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","CardComponentList","robots","map","robot","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","Scroll","children","style","overflowY","height","ErrorBoundry","props","state","hasError","error","info","this","setState","Component","Header","console","log","React","memo","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","connect","searchField","searchRobots","requestRobots","isPending","dispatch","onSearchChange","event","text","target","value","payload","onRequestRobots","fetch","response","json","data","catch","useEffect","filteredRobots","filter","toLowerCase","includes","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","AppRedux","document","getElementById"],"mappings":"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","file":"static/js/main.7ddbc852.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-s'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{ name }</h2>\r\n        <p>{ email }</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n  const CardComponentList = robots.map(robot => {\r\n    return <Card key={robot.id} {...robot} />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {CardComponentList}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        aria-label='Search Robots'\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='Search Robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","const Scroll = ({ children }) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', height: '800px' }}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  console.log('HEADER');\r\n  return <h1 className=\"f1\">RoboFriends</h1>\r\n}\r\n\r\nexport default React.memo(Header);\r\n","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport \"./App.css\";\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\r\nimport Header from '../Components/Header';\r\n\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  }\r\n}\r\n\r\nfunction App(props) {\r\n\r\n  const { searchField, onSearchChange, onRequestRobots, robots, isPending } = props;\r\n\r\n  useEffect(() => {\r\n    onRequestRobots();\r\n  }, [onRequestRobots])\r\n\r\n\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name\r\n      .toLowerCase()\r\n      .includes(searchField.toLowerCase());\r\n  });\r\n\r\n  return isPending ?\r\n    <h1 className=\"tc f1\">Loading...</h1>\r\n  :\r\n    (\r\n      <div className=\"tc\">\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n      .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n  searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n  switch(action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      // return Object.assign({}, state, { searchField: action.payload });\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n  switch(action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      // return Object.assign({}, state, { isPending: true });\r\n      return { ...state, isPending: true };\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      // return Object.assign({}, state, { isPending: false, robots: action.payload });\r\n      return { ...state, isPending: false, robots: action.payload };\r\n    case REQUEST_ROBOTS_FAILED:\r\n      // return Object.assign({}, state, { isPending: false, error: action.payload });\r\n      return { ...state, isPending: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n// import App from './Containers/App';\n// import AppHooks from './Containers/AppHooks';\nimport AppRedux from './Containers/AppRedux';\n\nimport 'tachyons'; // Templates\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { searchRobots, requestRobots } from './reducers';\n\n// middlewares\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App/> */}\n    {/* <AppHooks/> */}\n    <Provider store={store}>\n      <AppRedux/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}